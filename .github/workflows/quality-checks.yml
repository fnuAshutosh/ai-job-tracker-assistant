name: Streamlit App Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: ⚡ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black pytest streamlit-test
    
    - name: 🔍 Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,__pycache__,.git
        # Treat all other issues as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=venv,__pycache__,.git
    
    - name: 🎨 Check code formatting with black
      run: |
        black --check --diff . --exclude="venv|__pycache__|.git"
      continue-on-error: true
    
    - name: ✅ Test Python syntax compilation
      run: |
        python -m py_compile app.py
        python -m py_compile db_utils.py
        python -m py_compile demo_controller.py
        python -m py_compile ai_email_classifier.py
        echo "✅ All Python files compile successfully"
    
    - name: 🔗 Test critical imports
      run: |
        python -c "
        try:
            import streamlit as st
            print('✅ Streamlit import: OK')
            import pandas as pd
            print('✅ Pandas import: OK')
            import db_utils
            print('✅ db_utils import: OK')
            import demo_controller
            print('✅ demo_controller import: OK')
            import ai_email_classifier
            print('✅ ai_email_classifier import: OK')
            print('🎉 All critical imports successful!')
        except Exception as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "
    
    - name: 📊 Validate Streamlit app structure
      run: |
        # Check if main app file exists
        test -f app.py || (echo "❌ app.py not found" && exit 1)
        
        # Check if requirements.txt exists
        test -f requirements.txt || (echo "❌ requirements.txt not found" && exit 1)
        
        # Check if runtime.txt exists (for Python version specification)
        test -f runtime.txt || echo "⚠️  runtime.txt not found - Streamlit will use default Python"
        
        # Validate that streamlit is in requirements
        grep -q "streamlit" requirements.txt || (echo "❌ streamlit not in requirements.txt" && exit 1)
        
        echo "✅ Streamlit app structure validation passed"
    
    - name: 🚀 Simulate Streamlit app startup
      run: |
        # Test if the app can start without errors (timeout after 30 seconds)
        timeout 30s streamlit run app.py --server.headless true --server.port 8501 --server.address localhost &
        sleep 10
        # Check if Streamlit is running
        curl -f http://localhost:8501/_stcore/health || (echo "❌ Streamlit health check failed" && exit 1)
        echo "✅ Streamlit app starts successfully"
        # Kill the background process
        pkill -f streamlit || true
    
    - name: 📝 Generate deployment report
      if: always()
      run: |
        echo "## 📊 Deployment Readiness Report" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Python syntax: Valid" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dependencies: Installed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Streamlit: Can start" >> $GITHUB_STEP_SUMMARY
        echo "- 🚀 Ready for Streamlit Cloud deployment" >> $GITHUB_STEP_SUMMARY